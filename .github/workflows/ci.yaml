name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 24.8.0

      - name: Setup Pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Application
        run: pnpm run build

      - name: Verify Build Output
        run: |
          echo "‚úÖ All quality checks passed!"
          echo "Build output verification:"
          [ -d "dist" ] && echo "üì¶ dist size: $(du -sh dist | cut -f1)" || echo "‚ö†Ô∏è  No dist directory"
          [ -d ".next" ] && echo "üì¶ .next size: $(du -sh .next | cut -f1)" || echo "‚ö†Ô∏è  No .next directory"
          [ -d "out" ] && echo "üì¶ out size: $(du -sh out | cut -f1)" || echo "‚ö†Ô∏è  No out directory"

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 24.8.0

      - name: Setup Pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Application
        run: pnpm run build

      - name: Verify Build Output
        run: |
          echo "‚úÖ All quality checks passed!"
          echo "Build output verification:"
          [ -d "dist" ] && echo "üì¶ dist size: $(du -sh dist | cut -f1)" || echo "‚ö†Ô∏è  No dist directory"
          [ -d ".next" ] && echo "üì¶ .next size: $(du -sh .next | cut -f1)" || echo "‚ö†Ô∏è  No .next directory"
          [ -d "out" ] && echo "üì¶ out size: $(du -sh out | cut -f1)" || echo "‚ö†Ô∏è  No out directory"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: view dist
        run: cd dist && tree

      - name: Deploy to S3 bucket
        run: |
          aws s3 sync ./dist s3://${{ secrets.AWS_S3_BUCKET }} --delete
          echo "‚úÖ Deployment completed"

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"
